import os

# How big should the timeout for communication with the printers be
NETWORK_TIMEOUT = 5

# Should the networking stack ignore invalid certificates? It is a bad idea to turn off the verification, but
# since octoprint is typically exposed with a self-signed certificate (OctoPi is doing that), there is no other way apart from 
# issuing a trusted certificate for the OctoPi machine itself.
NETWORK_VERIFY_CERTIFICATES = True

# Change this to something unique to improve security of the backend
SECRET_KEY = "random-secret-to-be-changed!"

# Connection string to postgres. Keep this if running from docker-compose. Otherwise pick a unique password.
POSTGRES_DB = os.getenv('POSTGRES_DB', 'print3d')
POSTGRES_PASSWORD = os.getenv('POSTGRES_PASSWORD', 'print3d')
POSTGRES_USER = os.getenv('POSTGRES_USER', 'print3d')
POSTGRES_HOST = os.getenv('POSTGRES_HOST', 'localhost')
POSTGRES_PORT = os.getenv('POSTGRES_PORT', 5433)
DB_DSN = "host='%s' port=%s dbname='%s' user='%s' password='%s'" % (POSTGRES_HOST, POSTGRES_PORT, POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD)

# Directory where all uploaded files will be stored. This path is INSIDE the container, it shouldn't be /tmp on the host.
UPLOAD_FOLDER = os.getenv('KARMEN_UPLOAD_FOLDER', '/tmp/karmen-files')

# Redis instance used for proxying webcams through nginx. Keep this if running from docker-compose.
REDIS_HOST = os.getenv('REDIS_HOST', 'localhost')
REDIS_PORT = os.getenv('REDIS_PORT', 6379)

# Connection string to redis. Keep this if running from docker-compose.
CELERY_BROKER_URL = "redis://%s:%s" % (REDIS_HOST, REDIS_PORT)

# Connection string to redis. Keep this if running from docker-compose.
CELERY_RESULT_BACKEND = "redis://%s:%s" % (REDIS_HOST, REDIS_PORT)

# Celery schedule.
# The discover_printers service shall be turned off by changing NETWORK_DISCOVERY to false.
# The check_printers service should be kept running at all times
CELERY_CONFIG = {
  "timezone": "Europe/Prague",
  "beat_schedule": {
      "check_printers": {
          "task": "check_printers",
          "schedule": 30.0,
      },
  }
}

# If installation is in cloud, you want to disable options like network discovery, or hide printer ip in listing
IS_CLOUD_INSTALL = False

ALLOW_PRINTER_ADD_BY_IP = True
ALLOW_PRINTER_ADD_BY_SOCKET = False
SOCKET_API_URL = "http://path.to/websocket/api/%s"
