notifications:
  email: false
sudo: true
dist: xenial
services:
  - docker
addons:
  apt:
    packages:
      - docker-ce
      - jq

# never build forks (can be dangerous to run foreign code, right?)
if: fork = false
matrix:
  allow_failures:
    - python: 3.8-dev

  fast_finish: true
  include:

    - stage: Run tests
      language: node_js
      name: Compose test environment and run e2e tests

    # run cypress tests
      node_js: 10
      # cypress only for every commit in master
      if: (type = commit AND branch = master) OR commit_message =~ /#travis/
      cache:
        directories:
          - "$HOME/.npm"  # npm
          - "$HOME/.cache"  # cypress
      script: |
        set -e
        # start cypress installation
        cd src/karmen_frontend/cypress && CI=true npm ci --only=prod &
        travis_pid=$!
        # build containers
        cd $TRAVIS_BUILD_DIR/src/karmen_frontend
        KARMEN_CLOUD_MODE=1 docker-compose up --build -d
        # wait for cypress to finish installation
        while kill -0 $travis_pid > /dev/null 2>&1; do echo 'Waiting for cypress to finish installation ...'; sleep 1; done
        # check that all images were started and are running
        for docker_name in proxy backend_flask backend_celery_beat backend_celery_worker frontend; do
          [ -z `docker ps -qa -f name=$docker_name -f status=running` ] && travis_terminate
        done
        # wait for docker-compose to listen
        while ! curl -I localhost:4000 > /dev/null 2>&1; do echo 'Waiting for server...'; sleep 1; done
        npm run test:cypress
        docker-compose down || travis_terminate 1;

    # Python 3.7 (requires build images)
    - python: "3.7"
      language: python
      name: backend coverage @ Python 3.7
      # tests for every PR or anything in master
      if: branch IN (master, deploy, release) OR type IN (pull_request, api, cron) OR commit_message =~ /#travis/ OR tag IS present
      cache:
        directories:
          - "$HOME/.cache"
      install:
        - pip install pipenv
      before_script:
        - cd src/karmen_backend
      script:
        - pipenv install --dev || travis_terminate 1;
        - make coverage || travis_terminate 1;
        - make coveralls

    # nodejs
    - language: node_js
      name: frontend Jest tests and build
      if: branch IN (master, deploy, release) OR type IN (pull_request, api, cron) OR commit_message =~ /#travis/ OR tag IS present
      node_js: 10
      cache:
        directories:
          - "$HOME/.npm"
      before_script:
        - cd src/karmen_frontend
        - npm ci || travis_terminate 1;
      script:
        - npm run lint || travis_terminate 1;
        - npm run test || travis_terminate 1;
        - npm run build

    # build and push docker images
    - name: "backend image"
      stage: Build Docker images
      if: tag IS present
      language: generic
      before_install:
        - sudo docker run --privileged linuxkit/binfmt:v0.6
        - sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest
          --addr tcp://0.0.0.0:1234 --oci-worker-platform linux/amd64 --oci-worker-platform
          linux/armhf
        - sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/
        - export BUILDKIT_HOST=tcp://0.0.0.0:1234
      install: true
      script:
        - travis_wait 60 bash .travis/build-images-backend.sh

    - name: "frontend image"
      if: tag IS present
      language: generic
      before_install:
        - sudo docker run --privileged linuxkit/binfmt:v0.6
        - sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest
          --addr tcp://0.0.0.0:1234 --oci-worker-platform linux/amd64 --oci-worker-platform
          linux/armhf
        - sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/
        - export BUILDKIT_HOST=tcp://0.0.0.0:1234
      install: true
      script:
        - bash .travis/build-images-frontend.sh

    - name: "proxy image"
      if: tag IS present
      language: generic
      before_install:
        - sudo docker run --privileged linuxkit/binfmt:v0.6
        - sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest
          --addr tcp://0.0.0.0:1234 --oci-worker-platform linux/amd64 --oci-worker-platform
          linux/armhf
        - sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/
        - export BUILDKIT_HOST=tcp://0.0.0.0:1234
      install: true
      script:
        - bash .travis/build-images-proxy.sh

    # deploy to GitHub releases
    #
    # versions ending on -something ("-" and some text) are considered prerelease
    # while versions without "-" character are considered stable

    # PRE-RELEASE
    - name: "Pre-release"
      stage: Create GitHub release
      if: tag IS present
      language: generic
      install: true
      script:
        - bash .travis/make-github-release.sh
      deploy:
        prerelease: true
        provider: releases
        api_key:
          secure: "GAftyrpujHWUjoI20uBj146ycoMAOg8volZBkaOSCz2f56eezLwZa6ejc3HzasJy9iFLapP06Ool4DnzhgdV0BWu+O5+i+hdlkZ4N068ex2YDIAE3qXW8cJZBrUIjKxg5Fgc0N3wOQ3uUCiCNd2MYYrpSNUH/z1/cY5fvUpX2ExbE7YlC9DD3bNVXB/Q3ewZarQpxf7MErT4zpto/CqMqV2UgXJZAM8Ruv1UFNJoXHxlVwjHeSPXi92Ahcq3ClxIh8E9+MprDYheMtpG1YBKW6Ih924x70opifBB6Ep/Vvc3/tUkFpZwhL316PVRb8O7T5uCVxSvvBXTmlMvLT+6h8tHy1GSQPm9W0oqPdA3jo6hpoS0kiophn8dmqYkrSMZPiOSQYCvXk1QL05hA8DS50k+93CK7u9K1ghCa/ax6EEqLmzY9R05UX4JNIdH8dort4/mB9kSmMEATk+FarqitO+3M/tH7qORPRT7a5qHjtk6HEsAzo4/Tui2CIRuhu/7wnwwOJwIci5ccgw//8j/ZfB+NX03DdR9kKrGkJlEpjRnD67WBBf7m4O67O8y2ZI9JvJkN95jn2i/i0cOAL0c9XmZtZYD/UQJ2pzBKNAxvzDFIIB+xhnk5pjcanOwYBPddm+6oyhEpGjUUjsjap9NxuB6KGfmkIO2k/5eGahtY8Q="
        file: ./.travis/release.zip
        skip_cleanup: true
        on:
          repo: fragaria/karmen
          tags: true
          condition: '"$TRAVIS_TAG" =~ ^v[0-9.]*-.*$'

    # STABLE RELEASE
    - name: "Stable release"
      if: tag IS present
      language: generic
      install: true
      script:
        - bash .travis/make-github-release.sh
      deploy:
        prerelease: false
        provider: releases
        api_key:
          secure: "GAftyrpujHWUjoI20uBj146ycoMAOg8volZBkaOSCz2f56eezLwZa6ejc3HzasJy9iFLapP06Ool4DnzhgdV0BWu+O5+i+hdlkZ4N068ex2YDIAE3qXW8cJZBrUIjKxg5Fgc0N3wOQ3uUCiCNd2MYYrpSNUH/z1/cY5fvUpX2ExbE7YlC9DD3bNVXB/Q3ewZarQpxf7MErT4zpto/CqMqV2UgXJZAM8Ruv1UFNJoXHxlVwjHeSPXi92Ahcq3ClxIh8E9+MprDYheMtpG1YBKW6Ih924x70opifBB6Ep/Vvc3/tUkFpZwhL316PVRb8O7T5uCVxSvvBXTmlMvLT+6h8tHy1GSQPm9W0oqPdA3jo6hpoS0kiophn8dmqYkrSMZPiOSQYCvXk1QL05hA8DS50k+93CK7u9K1ghCa/ax6EEqLmzY9R05UX4JNIdH8dort4/mB9kSmMEATk+FarqitO+3M/tH7qORPRT7a5qHjtk6HEsAzo4/Tui2CIRuhu/7wnwwOJwIci5ccgw//8j/ZfB+NX03DdR9kKrGkJlEpjRnD67WBBf7m4O67O8y2ZI9JvJkN95jn2i/i0cOAL0c9XmZtZYD/UQJ2pzBKNAxvzDFIIB+xhnk5pjcanOwYBPddm+6oyhEpGjUUjsjap9NxuB6KGfmkIO2k/5eGahtY8Q="
        file: ./.travis/release.zip
        skip_cleanup: true
        on:
          repo: fragaria/karmen
          tags: true
          condition: '"$TRAVIS_TAG" =~ ^v[0-9.]*$'
env:
  global:
    - secure: OSoA7AOTIf0Ias9w/TkA+Rw55e/z+Gu1whBSsZp/ncwHmBJom3+uyF/Ry7Hu+7rHwkk29t6pXTvgfGar/BUWZ9FfJAiM+1ixrVaKpxkotJqNfcXDCSCBLznRBy5Odmqv+czMHvYAdLSIPL3p6fcsfy79u4ju1XM2ZluRMXQYycqk0xpe/tIw8KhhhKTZgnuWE57YhoC8m02lcuhkTCUylYsCxhabjghbxgUc4wXq76Tk1EDSjaCM9LMdqP4mUGuj0aYhAvX2v4JTOb55dS+UhlOPlmQ4ZahpopJKFz8HfYQCuaRZGP/L9ap9GLx/Q4BhFvz+7S+CjpJ0dS+i9IdJthufBmrRTcLObBTPF6DiTAXsqxRw2psf1W60+8zHLdzvxYAvAlLmTqR86+yCip83DyGNfnWKBWeJI+Jy309n/tJUxZmsxE4eFjv9oU5i4qRjZVZ7t5eO+evxTSKYuYCf8F7ALv1FA0wG0xq8x77ydrPn+pndSVa+xP3tX/ifqlmSMHr+jMivfqYhqptLTZAwxWKBK2mRc7Xh2TSvlcVNoahNiwOawQQjelOC+1v/5IVh925UVY3PiepuUlSlJc0Cf+Ee/oMxsTyAjd2V2baCgKfrtV28Du36QkLIyrEBU8GNd/KfdnfhBwLHXJEn/SoB8UpD3/BxfnZU6FwAUIYbUAI=
    - secure: e4YXgh+O63zgWYWD12WltX1BSLChLVkRcWh3bmVJjZhALnVZ8z/1ygW5L6/nNiJG+2Iwr09mQhHZWd9jE04RUpvGI08z0uqJb5urTri0+dvYrNAE1mNETJRo6br8GZLbhb68VDrg1HNO/p4/HpGCVQPSZaICFZocnH9PN/Tx87zjabko0Fb5XkQpUhBVVMLHYvET08bgQdkXttrsfNdZSvpUXF+A0I7wQ5TSYMJHklA29aN201ZJa6CWsiom93IOzQ9MpDX6f4v1QcyhB9eir9SnfvDvHyR2O0zhYUrXBtEw3XMO4kbPZ77V/pOpQLk497BHnIG+K5c+Wj2SYnGQ0sTzHsWjQsUPWoS9axn/VYDJFEAI5hnFxfUFSQO4rQFc5+RdWTExkjrkr2PhvPJll1AJfQF45I6NRUBr6kz4F4WJulYCUOAADIVN3xDO1ukMjuAmMIY/DNDMUlVRd1iFvksUkiAMnBR+D3YGKCaLxxvk7/sRDa8CyycoWwglCQ0eaPIwBcDO5vbazyAxiO/pm7gIdQAQRbGus+GKqNzsFGyMtZhodmwu8amdll5hsrLi+YRZ5sSjaLEtlHJprGEkMCw1y/6CV+2OysSOLZMBbIhJyqmlsb+hLjp9xpLrhJl03jDiUvaNGV7isZfUF3jE4eCKRYRHECNQB8k8yjdygOk=
